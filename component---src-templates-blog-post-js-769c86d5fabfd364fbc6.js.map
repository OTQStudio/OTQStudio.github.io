{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog-post.js"],"names":["Header","header","nav","style","title","props","id","class","type","for","to","href","icon","faInstagram","aria-label","faTwitter","faFacebookF","fontWeight","fontSize","color","className","Layout","location","children","Blog","data","post","wpPost","siteTitle","site","siteMetadata","description","excerpt","src","featuredImage","node","sourceUrl","alt","date","dangerouslySetInnerHTML","__html","content","pageQuery"],"mappings":"2LA8DeA,EApDA,SAAC,GAAqB,IAC/BC,EACAC,EACAC,EAH8B,EAAlBC,MAAkB,EAAZC,MA0CtB,OApCAH,EACE,yBAAKI,GAAG,YAAYC,MAAM,oBACxB,yBAAKD,GAAG,cACN,2BAAOA,GAAG,YAAYE,KAAK,WAAWD,MAAM,gBAC5C,2BAAOD,GAAG,WAAWG,IAAI,aAAY,gCACrC,2BAAOF,MAAM,cAAcD,GAAG,YAAYG,IAAI,cAC9C,yBAAKH,GAAG,eACR,6BACE,4BACE,4BAAI,kBAAC,OAAD,CAAMI,GAAG,KAAT,QACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAG,cAAT,YACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAG,UAAT,SACJ,4BAAI,kBAAC,OAAD,CAAMA,GAdP,OAcC,gBACJ,4BACE,uBAAGC,KAAK,yCAAwC,kBAAC,IAAD,CAAiBC,KAAMC,IAAaC,aAAW,0BAC/F,uBAAGH,KAAK,sCAAqC,kBAAC,IAAD,CAAiBC,KAAMG,IAAWD,aAAW,wBAC1F,uBAAGH,KAAK,kCAAiC,kBAAC,IAAD,CAAiBC,KAAMI,IAAaF,aAAW,+BAQpGX,EAAM,CACJc,WAAY,IACZC,SAAU,SACVC,MAAO,QAGTlB,EACE,6BACE,kBAAC,OAAD,CAAME,MAAOA,EAAOO,GAAE,KAAtB,QAKF,gCACE,yBAAKU,UAAU,QACZnB,EACAC,KCpCMmB,IAdA,SAAC,GAAkC,EAAhCC,SAAgC,EAAtBlB,MAAuB,IAAhBmB,EAAe,EAAfA,SAGjC,OACE,6BACE,kBAAC,EAAD,MACA,8BAAOA,GACP,gCACE,2BAAG,6C,yDCdX,8GAgCeC,UAzBF,SAACnB,EAAMiB,GAAc,IACxBG,EAASpB,EAAToB,KACQC,EAASD,EAAjBE,OACFC,EAAYH,EAAKI,KAAKC,aAAa1B,MAEzC,OACE,kBAAC,IAAD,CAAQkB,SAAUA,EAAUlB,MAAOwB,GAEjC,kBAAC,IAAD,CACExB,MAAOsB,EAAKtB,MACZ2B,YAAaL,EAAKM,SAAWN,EAAKM,UAEpC,6BAASZ,UAAU,QACjB,gCACE,yBAAKa,IAAKP,EAAKQ,cAAcC,KAAKC,UAAWC,IAAI,KACjD,4BAAKX,EAAKtB,OACV,mCAASsB,EAAKY,KAAd,MAGF,6BAASC,wBAAyB,CAAEC,OAAQd,EAAKe,cAQlD,IAAMC,EAAS","file":"component---src-templates-blog-post-js-769c86d5fabfd364fbc6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { globalHistory } from \"@reach/router\"\n\nimport '../styles/layout.scss'\nimport '../styles/header.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram,faTwitter,faFacebookF } from '@fortawesome/free-brands-svg-icons'\n\n\nconst Header = ({ title,props }) => {\n  let header\n  let nav\n  let style\n  const path = '/jp'//globalHistory.location.pathname + \"-japanese\"\n\n  nav = (\n    <div id=\"globalNav\" class=\"header-logo-menu\">\n      <div id=\"nav-drawer\">\n        <input id=\"nav-input\" type=\"checkbox\" class=\"nav-unshown\" />\n        <label id=\"nav-open\" for=\"nav-input\"><span></span></label>\n        <label class=\"nav-unshown\" id=\"nav-close\" for=\"nav-input\"></label>\n        <div id=\"nav-content\">\n        <nav>\n          <ul>\n            <li><Link to=\"/\">Top</Link></li>\n            <li><Link to=\"/projects/\">Project</Link></li>\n            <li><Link to=\"/news/\">News</Link></li>\n            <li><Link to={path}>In Japanese</Link></li>\n            <li>\n              <a href=\"https://www.instagram.com/otq.studio/\"><FontAwesomeIcon icon={faInstagram} aria-label=\"Instagram Brand Icon\" /></a>\n              <a href=\"https://www.twitter.com/otqstudio/\"><FontAwesomeIcon icon={faTwitter} aria-label=\"Twitter Brand Icon\" /></a>\n              <a href=\"https://facebook.com/OTQStudio\"><FontAwesomeIcon icon={faFacebookF} aria-label=\"Facebook Brand Icon\" /></a></li>\n          </ul>\n        </nav>\n        </div>\n      </div>\n    </div>\n  )\n\n  style={\n    fontWeight: 900,\n    fontSize: '2.0rem',\n    color: \"#000\",\n  }\n\n  header = (\n    <nav>\n      <Link style={style} to={`/`}>OTQ</Link>\n    </nav>\n  )\n\n  return (\n    <header>\n      <div className=\"flex\">\n        {header}\n        {nav}\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n//import { Link } from \"gatsby\"\n\nimport '../styles/layout.scss'\nimport Header from \"../components/header\"\n\nconst Layout = ({ location, title, children }) => {\n  //const rootPath = `${__PATH_PREFIX__}/`\n\n  return (\n    <div>\n      <Header />\n      <main>{children}</main>\n      <footer>\n        <p><small>Â© OTQ</small></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\n\nimport '../styles/article.scss'\nimport SEO from \"../components/seo\"\n\nconst Blog = (props,location) => {\n  const { data } = props;\n  const { wpPost: post } = data;\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n\n      <SEO\n        title={post.title}\n        description={post.excerpt || post.excerpt}\n      />\n      <article className=\"blog\">\n        <header>\n          <img src={post.featuredImage.node.sourceUrl} alt=\"\"/>\n          <h1>{post.title}</h1>\n          <p> On: {post.date} </p>\n        </header>\n\n        <section dangerouslySetInnerHTML={{ __html: post.content }} />\n      </article>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query BlogByID($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    wpPost(id: { eq: $id }) {\n      id\n      date\n      slug\n      title\n      content\n      featuredImage {\n        node {\n          sourceUrl\n        }\n      }\n    }\n  }\n`;\n/*import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\n\nimport '../styles/article.scss'\nimport SEO from \"../components/seo\"\n\nexport default ({ data, location }) => {\n  const post = data.allWpPost.edges[1].node\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n\n      <SEO\n        title={post.title}\n        description={post.excerpt || post.excerpt}\n      />\n      <article className=\"blog\">\n      <p>{post.id}</p>\n        <header>\n          <img src={post.featuredImage.node.sourceUrl} alt=\"\"/>\n          <h1>{post.title}</h1>\n          <p> On: {post.date} </p>\n        </header>\n\n        <section dangerouslySetInnerHTML={{ __html: post.content }} />\n        <p> By: {post.author.node.name} </p>\n      </article>\n\n      <nav className=\"prev-next\">\n        <ul>\n          <li>\n            {data.allWpPost.edges[0].next.slug ? (\n              <Link to={data.allWpPost.edges[0].next.slug} rel=\"next\">\n                <span>Next - </span>{data.allWpPost.edges[0].next.title}\n              </Link>\n            ): null}\n          </li>\n          <li>\n            {data.allWpPost.edges[0].previous.slug = null ? (\n              <Link to={data.allWpPost.edges[0].previous.slug} rel=\"prev\">\n                <span>Prev - </span>{data.allWpPost.edges[0].previous.title}\n              </Link>\n            ) : null}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allWpPost(sort: { fields: [date] }) {\n        edges {\n            node {\n                title\n                content\n                slug\n                date\n                excerpt\n                id\n                author {\n                  node {\n                    name\n                  }\n                }\n                featuredImage {\n                  node {\n                    sourceUrl\n                  }\n                }\n            }\n            next {\n              title\n              slug\n            }\n            previous {\n              slug\n              title\n            }\n        }\n    }\n  }`\n\n*/\n"],"sourceRoot":""}